spring.application.name=${APP_DB_NAME}


# URL that springboot needs to connect to our database
# jdbc: "sort of lower level Java api"
# followed by: type of DB (mysql), location of DB (localhost:3306), name of path (liftoff_vinyl_destination)
# username needs permissions on pertinent DB
# password: make more secure

spring.datasource.url=jdbc:mysql://${APP_DB_HOST}:${APP_DB_PORT}/${APP_DB_USER}
  liftoff_vinyl_destination
spring.datasource.username=${APP_DB_USER}
spring.datasource.password=${APP_DB_PASS}

# Specify the DBMS
spring.jpa.database = MYSQL

# Show or not log for each sql query

# our Java code will generate sql queries (e.g., "SELECT") w/o us being privy to the specifics, but if we WANT to see the specific queries, then we change this to "true"
spring.jpa.show-sql = false


# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)


# Google Authenticator API
spring.security.oauth2.client.registration.google.client-id=${googleClientId}

spring.security.oauth2.client.registration.google.client-secret=${googleClientSecret}

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

